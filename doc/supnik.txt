Date: Mon, 28 May 2001 22:33:55 -0400
To: Adrian Wise
From: Bob Supnik
Subject: An update on the H316 generics

Adrian,

At long last I've obtained an H316 print set and been able to look at the
decoding of the generics.  It turns out that Donald Bell's description is
somewhat incomplete, and the logic equations in the instruction
descriptions cannot be trusted.  I think I have a more complete set now,
but it requires hand verification.  Nonetheless, I wanted to send you my
working notes.

   A group A generic executes in 3 or 5 phases.  A 'normal'
   instruction takes 3 phases:

        tlate   t2 extended into t3
        t3      t3
        t4      t4

   A '1.5 cycle' instruction takes 5 phases:

        tlate   t2 extended into t3
        t3      t3
        t2      'special' t2
        tlate   t2 extended into t3
        t3      t3
        t4      t4

   The key signals, by phase, are the following

        tlate   EASTL   enable A to sum leg 1 (else 0)
                        (((m12+m16)x!azzzz)+(m9+m11+azzzz)
                EASBM   enable 0 to sum leg 2 (else 177777)
                        (m9+m11+azzzz)
                JAMKN   jam carry network to 0 (force XOR)
                        ((m12+m16)x!azzzz)
                EIKI7   force carry into adder
                        ((m15+(Cx!m13))x!JAMKN)

        t3      CLDTR   set D to 177777 (always)
                ESDTS   enable adder sum to D (always)
                SETAZ   enable repeat cycle = set azzzz
                        (m8xm15x!azzzz)

   if not azzzz,
        t4      CLATR   clear A register
                        (m11+m15+m16)
                CLA1R   clear A1 register
                        (m10+m14)
                EDAHS   enable D high to A high register
                        ((m11xm14)+m15+m16)
                EDALS   enable D low to A low register
                        ((m11xm13)+m15+m16)
                ETAHS   enable D transposed to A high register
                        (m9xm11)
                ETALS   enable D transposed to A low register
                        (m10xm11)
                EDA1R   enable D1 to A1 register
                        ((m8xm10)+m14)
                CS1TF   conditionally set C from adder output
                        (m9x!m11)
                US1TF   unconditionally set C
                        (m8xm9)

   if azzzz,
        t2      CLATR   clear A register (on due to azzzz)
                EDAHS   enable D high to A high register (on due to azzzz)
                EDALS   enable D low to A low register (on due to azzzz)
                
        tlate, t3, t4 as above

The key addition is the control of the adder input multiplexors, and the
adder carry network, which was not previously noted.  This allows various
combinations of {A,0} and {0,-1} to be asserted, along with ADD vs XOR
processing.

I'm constructing a program based on this analysis and will try the various
combinations documented in Bell's memo.

/Bob

